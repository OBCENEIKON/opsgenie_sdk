=begin
#Opsgenie REST API

#Opsgenie OpenAPI Specification

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.13

=end

require 'spec_helper'
require 'json'

# Unit tests for OpsgenieSdk::IncidentApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'IncidentApi' do
  before do
    # run before each test
    @instance = OpsgenieSdk::IncidentApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of IncidentApi' do
    it 'should create an instance of IncidentApi' do
      expect(@instance).to be_instance_of(OpsgenieSdk::IncidentApi)
    end
  end

  # unit tests for close_incident
  # Close Incident
  # Closes incident with given identifier
  # @param identifier Identifier of incident which could be incident id or tiny id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :identifier_type Type of the identifier that is provided as an in-line parameter. Possible values are &#39;id&#39; or &#39;tiny. Default is id&#39;
  # @option opts [CloseIncidentPayload] :body Request payload of closing incident action
  # @return [SuccessResponse]
  describe 'close_incident test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_incident
  # Create Incident
  # Creates a new incident
  # @param body Request payload of created incident
  # @param [Hash] opts the optional parameters
  # @return [SuccessResponse]
  describe 'create_incident test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_incident
  # Delete Incident
  # Deletes an incident using incident id or the tiny id
  # @param identifier Identifier of incident which could be incident id or tiny id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :identifier_type Type of the identifier that is provided as an in-line parameter. Possible values are &#39;id&#39; or &#39;tiny. Default is id&#39;
  # @return [SuccessResponse]
  describe 'delete_incident test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_incident
  # Get Incident
  # Returns incident with given id, tiny id or alias
  # @param identifier Identifier of incident which could be incident id or tiny id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :identifier_type Type of the identifier that is provided as an in-line parameter. Possible values are &#39;id&#39; or &#39;tiny. Default is id&#39;
  # @return [GetIncidentResponse]
  describe 'get_incident test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_incident_request_status
  # Get Request Status of Incident
  # Used to track the status and incident details (if any) of the request whose identifier is given
  # @param request_id Universally unique identifier of the questioned request
  # @param [Hash] opts the optional parameters
  # @return [GetIncidentRequestStatusResponse]
  describe 'get_incident_request_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_incidents
  # List incidents
  # Return list of incidents
  # @param query Search query to apply while filtering the incidents.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset Start index of the result set (to apply pagination). Minimum value (and also default value) is 0.
  # @option opts [Integer] :limit Maximum number of items to provide in the result. Must be a positive integer value. Default value is 20 and maximum value is 100
  # @option opts [String] :sort Name of the field that result set will be sorted by
  # @option opts [String] :order Sorting order of the result set
  # @return [ListIncidentsResponse]
  describe 'list_incidents test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
