=begin
#Opsgenie REST API

#Opsgenie OpenAPI Specification

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.13

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for OpsgenieSdk::ActionMapping
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ActionMapping' do
  before do
    # run before each test
    @instance = OpsgenieSdk::ActionMapping.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ActionMapping' do
    it 'should create an instance of ActionMapping' do
      expect(@instance).to be_instance_of(OpsgenieSdk::ActionMapping)
    end
  end
  describe 'test attribute "action"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["create", "acknowledge", "unacknowledge", "snooze", "escalate-to-next", "add-note", "add-responder", "add-tags", "remove-tags", "close", "delete", "escalate", "custom-action", "assign-ownership", "take-ownership", "update-priority", "update-description", "update-message"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.action = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "extra_field"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "extra_field_for_mapped_action"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "mapped_action"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["publish", "create-incident", "create-problem", "update-description", "update-priority", "resolve-issue", "resolve-ticket", "add-work-info", "close-incident", "create", "close", "resolve", "add-journal", "in-progress-incident", "resolve-incident", "acknowledge", "unacknowledge", "create-service-ticket", "add-discussion-note-to-ticket", "add-resolution-note-to-ticket", "add-internal-note-to-ticket", "close-service-ticket", "in-progress-ticket", "custom-status", "add-note", "confirm-incident", "set-status-to-closed", "set-status-to-pending", "set-status-to-resolved", "create-ticket", "add-public-note", "add-private-note", "set-status-to-open", "create-issue", "add-comment-to-issue", "in-progress-issue", "close-issue", "issue-done", "add-tag", "create-conversation", "set-status-to-completed", "ack-alert", "unmute-alert", "send-to-channel", "create-case", "set-case-status-to-active", "set-case-status-to-close", "set-case-status-to-close-as-duplicate", "post-action-to-oec", "create-alert", "close-alert", "acknowledge-alert", "unacknowledge-alert", "acknowledgeSensor", "setStatusToClosed", "set-case-status-to-working", "add-note-to-incident", "assign-to-group", "assign-to-user", "assign-to-owner", "send-to-custom-endpoint", "acknowledge-notification", "createEvent", "createTag", "createComment", "updateSeverity", "updateStatusToClosed", "updateStatusToInProgress", "create-incident-and-update-component-statuses", "resolve-incident-and-update-component-statuses-back-to-operational", "update-component-statuses", "sendData", "postToUrl", "add-internal-note", "public-reply", "set-status-to-solved"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.mapped_action = value }.not_to raise_error
      # end
    end
  end

end
